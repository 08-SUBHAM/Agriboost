[1mdiff --git a/app.js b/app.js[m
[1mindex 86f28ad..aa1da62 100644[m
[1m--- a/app.js[m
[1m+++ b/app.js[m
[36m@@ -35,18 +35,30 @@[m [mconst upload = multer({[m
     limits: { fileSize: 2 * 1024 * 1024 } // 2MB limit[m
   });[m
 [m
[31m- // Improved MongoDB connection with auto-reconnect[m
[31m- mongoose.connect('mongodb://127.0.0.1:27017/authtestapp')[m
[31m- .then(() => {})[m
[31m- .catch(err => {[m
[31m-   process.exit(1); // Exit if initial connection fails[m
[31m- });[m
[32m+[m[32m// Improved MongoDB connection with auto-reconnect[m
[32m+[m[32mmongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://sonughosh0810:Sonu0810@cluster.qxafmqo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster', {[m
[32m+[m[32m    useNewUrlParser: true,[m
[32m+[m[32m    useUnifiedTopology: true[m
[32m+[m[32m})[m
[32m+[m[32m.then(() => console.log('Connected to MongoDB Atlas'))[m
[32m+[m[32m.catch(err => {[m
[32m+[m[32m    console.error('MongoDB connection error:', err);[m
[32m+[m[32m    // Don't exit, let the app continue without DB[m
[32m+[m[32m});[m
 [m
 // Event listeners for connection status[m
[31m-mongoose.connection.on('connected', () => {});[m
[32m+[m[32mmongoose.connection.on('connected', () => {[m
[32m+[m[32m    console.log('MongoDB connection established');[m
[32m+[m[32m});[m
 [m
 mongoose.connection.on('disconnected', () => {[m
[31m- setTimeout(() => mongoose.connect('mongodb://127.0.0.1:27017/authtestapp'), 5000);[m
[32m+[m[32m    console.log('MongoDB connection lost, attempting to reconnect...');[m
[32m+[m[32m    setTimeout(() => {[m
[32m+[m[32m        mongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://sonughosh0810:Sonu0810@cluster.qxafmqo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster', {[m
[32m+[m[32m            useNewUrlParser: true,[m
[32m+[m[32m            useUnifiedTopology: true[m
[32m+[m[32m        });[m
[32m+[m[32m    }, 5000);[m
 });[m
 [m
 // Function to fetch and store government schemes[m
[36m@@ -103,6 +115,7 @@[m [masync function fetchAndStoreSchemes() {[m
         console.log('Government schemes updated successfully');[m
     } catch (error) {[m
         console.error('Error fetching government schemes:', error);[m
[32m+[m[32m        // Continue without schemes[m
     }[m
 }[m
 [m
[1mdiff --git a/check-news.js b/check-news.js[m
[1mindex 6f3cae9..a710f22 100644[m
[1m--- a/check-news.js[m
[1m+++ b/check-news.js[m
[36m@@ -1,10 +1,15 @@[m
 const mongoose = require('mongoose');[m
 const News = require('./models/news');[m
 [m
[32m+[m[32mconst DB_URI = process.env.MONGODB_URI || 'mongodb+srv://sonughosh0810:Sonu0810@cluster.qxafmqo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster';[m
[32m+[m
 async function checkNews() {[m
     try {[m
[31m-        await mongoose.connect('mongodb://127.0.0.1:27017/agriboost');[m
[31m-        console.log('Connected to MongoDB');[m
[32m+[m[32m        await mongoose.connect(DB_URI, {[m
[32m+[m[32m            useNewUrlParser: true,[m
[32m+[m[32m            useUnifiedTopology: true[m
[32m+[m[32m        });[m
[32m+[m[32m        console.log('Connected to MongoDB Atlas');[m
 [m
         const news = await News.find({});[m
         console.log(`Total news articles: ${news.length}`);[m
[36m@@ -18,9 +23,11 @@[m [masync function checkNews() {[m
         }[m
 [m
         await mongoose.disconnect();[m
[31m-        console.log('Disconnected from MongoDB');[m
[32m+[m[32m        console.log('Disconnected from MongoDB Atlas');[m
     } catch (error) {[m
         console.error('Error:', error);[m
[32m+[m[32m        // Don't exit on error[m
[32m+[m[32m        console.log('Continuing without news check...');[m
     }[m
 }[m
 [m
[1mdiff --git a/netlify.toml b/netlify.toml[m
[1mindex b9293eb..3b6a17b 100644[m
[1m--- a/netlify.toml[m
[1m+++ b/netlify.toml[m
[36m@@ -1,6 +1,7 @@[m
 [build][m
   command = "npm install"[m
   publish = "public"[m
[32m+[m[32m  functions = "functions"[m
 [m
 [[redirects]][m
   from = "/*"[m
[36m@@ -8,4 +9,13 @@[m
   status = 200[m
 [m
 [build.environment][m
[31m-  NODE_VERSION = "18" [m
\ No newline at end of file[m
[32m+[m[32m  NODE_VERSION = "18"[m
[32m+[m[32m  MONGODB_URI = "your-mongodb-uri"[m
[32m+[m[32m  JWT_SECRET = "your-jwt-secret"[m
[32m+[m[32m  NODE_ENV = "production"[m
[32m+[m
[32m+[m[32m[functions][m
[32m+[m[32m  directory = "functions"[m
[32m+[m
[32m+[m[32m[[plugins]][m
[32m+[m[32m  package = "@netlify/plugin-nextjs"[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/news-service.js b/news-service.js[m
[1mindex 09c56de..8d107de 100644[m
[1m--- a/news-service.js[m
[1m+++ b/news-service.js[m
[36m@@ -3,18 +3,26 @@[m [mconst { fetchAndStoreNews } = require('./app');[m
 [m
 // Configuration[m
 const FETCH_INTERVAL = 2 * 60 * 60 * 1000; // 2 hours in milliseconds[m
[31m-const DB_URI = 'mongodb://127.0.0.1:27017/agriboost';[m
[32m+[m[32mconst DB_URI = process.env.MONGODB_URI || 'mongodb+srv://sonughosh0810:Sonu0810@cluster.qxafmqo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster';[m
 [m
 async function startNewsService() {[m
     try {[m
         // Connect to MongoDB[m
[31m-        await mongoose.connect(DB_URI);[m
[31m-        console.log('Connected to MongoDB');[m
[32m+[m[32m        await mongoose.connect(DB_URI, {[m
[32m+[m[32m            useNewUrlParser: true,[m
[32m+[m[32m            useUnifiedTopology: true[m
[32m+[m[32m        });[m
[32m+[m[32m        console.log('Connected to MongoDB Atlas');[m
 [m
         // Initial fetch[m
         console.log('Performing initial news fetch...');[m
[31m-        await fetchAndStoreNews();[m
[31m-        console.log('Initial news fetch completed');[m
[32m+[m[32m        try {[m
[32m+[m[32m            await fetchAndStoreNews();[m
[32m+[m[32m            console.log('Initial news fetch completed');[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.error('Error in initial news fetch:', error);[m
[32m+[m[32m            // Continue running even if initial fetch fails[m
[32m+[m[32m        }[m
 [m
         // Schedule periodic fetches[m
         setInterval(async () => {[m
[36m@@ -31,7 +39,8 @@[m [masync function startNewsService() {[m
 [m
     } catch (error) {[m
         console.error('Failed to start news service:', error);[m
[31m-        process.exit(1);[m
[32m+[m[32m        // Don't exit process on connection error, let the app continue[m
[32m+[m[32m        console.log('Continuing without news service...');[m
     }[m
 }[m
 [m
